{"ast":null,"code":"var _jsxFileName = \"/Users/natthaphonsomsa-ard/ztmprojects/facerecognitionapp/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Rank/Rank';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Particles from \"react-tsparticles\";\nimport particlesOptions from './particleOptions';\nimport Clarifai from \"clarifai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: process.env.REACT_APP_CLARIFAI_API_KEY\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          email: data.email,\n          name: data.name,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      //console.log('box:', box)\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      //console.log(event.target.value);\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      }); //console.log('click');\n\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signedout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        email: '',\n        id: '',\n        name: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      box,\n      imageUrl,\n      route\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        options: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        onRouteChange: this.onRouteChange,\n        isSignedIn: isSignedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(SignIn, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/natthaphonsomsa-ard/ztmprojects/facerecognitionapp/frontend/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","FaceRecognition","Rank","SignIn","Register","Particles","particlesOptions","Clarifai","app","App","apiKey","process","env","REACT_APP_CLARIFAI_API_KEY","constructor","loadUser","data","setState","user","id","email","name","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","event","input","target","value","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","catch","err","console","log","onRouteChange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Rank/Rank';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Particles from \"react-tsparticles\";\nimport particlesOptions from './particleOptions';\nimport Clarifai from \"clarifai\";\n\n\nconst app = new Clarifai.App({\n  apiKey: process.env.REACT_APP_CLARIFAI_API_KEY\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box:{},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        email:'',\n        id:'',\n        name: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n        id:data.id,  \n        email:data.email,\n        name: data.name,\n        entries: data.entries,\n        joined: data.joined\n    }});\n  }\n/*\n  componentDidMount() {\n    fetch('http://localhost:3000')\n      .then(response => response.json())\n      .then(console.log)\n  }\n*/\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    //console.log('box:', box)\n    this.setState( {box: box} )\n  }\n\n  onInputChange = (event) => {\n    //console.log(event.target.value);\n    this.setState( {input: event.target.value} );\n  }\n\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n    //console.log('click');\n    app.models\n      .predict(\n        Clarifai.FACE_DETECT_MODEL, \n        this.state.input)\n      .then((response) => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      })\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signedout') {\n      this.setState({ isSignedIn: false });\n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true })\n    }\n    this.setState( {route:route} )\n  }\n\n  render() {\n    const { isSignedIn, box, imageUrl, route } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className='particles' options={ particlesOptions } />\n        <Navigation onRouteChange={this.onRouteChange} isSignedIn={isSignedIn} />\n        <Logo />\n        { route === 'home'\n          ? <div>\n              <Rank name={this.state.user.name} entries={this.state.user.entries} />\n              <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} />\n              <FaceRecognition box={box} imageUrl={imageUrl} />\n            </div> \n          : (\n              route === 'signin'\n              ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} /> \n              : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}